link [options] obj obj obj ...
link @controlfile

-b            - Output straight binary
-c            - Output in .cmd format
-e            - Output Elf/OS executable
-i            - Output Intel hex
-I path       - Additional path for finding objects
-h            - Output RCS hex
-L path       - Additional path for libraries
-s            - Show public symbols
-S name       - output symbols to file
-o name       - Specify output filename
-l name       - Specify library to search
-be           - Use big-endian mode
-le           - Use little-endian mode

Control file
------------
add filename         - add specified object file
library filename     - add library to search
mode big             - set big-endian mode
mode little          - set little-endian mode
mode binary          - set binary output mode
mode cmd             - set .cmd output mode
mode elfos           - set Elf/OS output mode
mode intel           - set Intel hex output mode
mode rcs             - set RCS hex output mode
output filename      - filename for output


object file structure
---------------------
.big                 - Use big-endian mode
.little              - Use little-endian mode
.requires module     - Requre module to be included
.library filename    - Search specified library for references
.align word          - Align procedure on word boundary (2 bytes)
.align dword         - Align procedure on double word boundary (4 bytes)
.align qword         - Align procedure on quad word boundary (8 bytes)
.align para          - Align procedure on paragraph boundary (16 bytes)
.align 32            - Align procedure on 32-byte boundary
.align 64            - Align procedure on 64-byte boundary
.align 128           - Align procedure on 128-byte boundary
.align page          - Align procedure on page boundary (256 bytes)
:addr bb bb bb ...   - Program bytes
@addr                - Start address
?name addr           - External reference used at addr
=name value          - public symbol
{name                - begin relocatable procedure
}                    - end relocatable procedure
/name addr [lofs]    - add byte at addr with high of name
\name addr           - add byte at addr with low of name
+addr                - apply module offset at addr
^addr                - apply high byte of module offset at addr
vaddr                - apply low byte of module offset at addr
>inc                 - increase current address by 'inc'
